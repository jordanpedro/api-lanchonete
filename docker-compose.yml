version: '3.8'
volumes:
  sqlserver_data:  
services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${DB_PASSWORD}
    ports:
      - 1433:1433
    restart: always
    networks:
      - default    
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P ${DB_PASSWORD} -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  sqlserver.configuracao:
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P ${DB_PASSWORD} -d master -i docker-entrypoint-initdb.d/init.sql;
      echo "Pronto!";
      '
  api:
    container_name: api
    hostname: api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    expose:
      - 80
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      PORT_NUMBER: ${PORT_NUMBER}
    restart: always
    networks:
      - default
    depends_on:
      - sqlserver    
networks:
  default:
    driver: bridge      